/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../lib/components/tag-input-item/tag-input-item.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
export class Wrapper_TagInputItemComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TagInputItemComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.TagInputItemComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_selected(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.selected = currValue;
      this._expr_0 = currValue;
    }
  }
  check_text(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.text = currValue;
      this._expr_1 = currValue;
    }
  }
  check_index(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.index = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = this.context.isSelected;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementClass(el,'ng2-tag-input-item-selected',currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.tagRemoved.subscribe(_eventHandler.bind(view,'tagRemoved'))); }
  }
}
var renderType_TagInputItemComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TagInputItemComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TagInputItemComponent>;
  _TagInputItemComponent_0_3:Wrapper_TagInputItemComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TagInputItemComponent_Host0,renderType_TagInputItemComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'rl-tag-input-item',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TagInputItemComponent0(this.viewUtils,this,0,this._el_0);
    this._TagInputItemComponent_0_3 = new Wrapper_TagInputItemComponent();
    this.compView_0.create(this._TagInputItemComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._TagInputItemComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TagInputItemComponent) && (0 === requestNodeIndex))) { return this._TagInputItemComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TagInputItemComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._TagInputItemComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TagInputItemComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TagInputItemComponentNgFactory:import7.ComponentFactory<import0.TagInputItemComponent> = new import7.ComponentFactory<import0.TagInputItemComponent>('rl-tag-input-item',View_TagInputItemComponent_Host0,import0.TagInputItemComponent);
const styles_TagInputItemComponent:any[] = ['[_nghost-%COMP%] {\n      font-family: "Roboto", "Helvetica Neue", sans-serif;\n      font-size: 16px;\n      height: 32px;\n      line-height: 32px;\n      display: inline-block;\n      background: #e0e0e0;\n      padding: 0 12px;\n      border-radius: 90px;\n      margin-right: 10px;\n      transition: all 0.12s ease-out;\n    }\n\n     [_nghost-%COMP%]   .ng2-tag-input-remove[_ngcontent-%COMP%] {\n      background: #a6a6a6;\n      border-radius: 50%;\n      color: #e0e0e0;\n      cursor: pointer;\n      display: inline-block;\n      font-size: 17px;\n      height: 24px;\n      line-height: 24px;\n      margin-left: 6px;\n      margin-right: -6px;\n      text-align: center;\n      width: 24px;\n    }\n\n    .ng2-tag-input-item-selected[_nghost-%COMP%] {\n      color: white;\n      background: #0d8bff;\n    }\n\n     .ng2-tag-input-item-selected[_nghost-%COMP%]   .ng2-tag-input-remove[_ngcontent-%COMP%] {\n      background: white;\n      color: #0d8bff;\n    }'];
var renderType_TagInputItemComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_TagInputItemComponent,{});
export class View_TagInputItemComponent0 extends import2.AppView<import0.TagInputItemComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TagInputItemComponent0,renderType_TagInputItemComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'span',new import3.InlineArray2(2,'class','ng2-tag-input-remove'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Ã—',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4:any = import3.inlineInterpolate(1,'\n    ',this.context.text,'\n    ');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_0,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.removeTag()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}