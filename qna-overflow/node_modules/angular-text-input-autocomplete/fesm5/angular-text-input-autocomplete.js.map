{"version":3,"file":"angular-text-input-autocomplete.js.map","sources":["ng://angular-text-input-autocomplete/text-input-autocomplete-menu.component.ts","ng://angular-text-input-autocomplete/text-input-autocomplete.directive.ts","ng://angular-text-input-autocomplete/text-input-autocomplete-container.component.ts","ng://angular-text-input-autocomplete/text-input-autocomplete.module.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-menu',\n  template: `\n    <ul \n      *ngIf=\"choices?.length > 0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      <li\n        *ngFor=\"let choice of choices; trackBy:trackById\"\n        [class.active]=\"activeChoice === choice\">\n        <a\n          href=\"javascript:;\"\n          (click)=\"selectChoice.next(choice)\">\n          {{ choice }}\n        </a>\n      </li>\n    </ul>\n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef<HTMLUListElement>;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n  trackById = (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice;\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n      if (liPosition.top < ulPosition.top) {\n        li.scrollIntoView();\n      } else if (liPosition.bottom > ulPosition.bottom) {\n        li.scrollIntoView(false);\n      }\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter<ChoiceSelectedEvent>();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise<any[]>;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef<TextInputAutocompleteMenuComponent>;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor < this.menu.triggerCharacterPosition) {\n          this.hideMenu();\n        } else {\n          const searchText = value.slice(\n            this.menu.triggerCharacterPosition + 1,\n            cursor\n          );\n          if (!searchText.match(this.searchRegexp)) {\n            this.hideMenu();\n          } else {\n            this.menu.component.instance.searchText = searchText;\n            this.menu.component.instance.choices = [];\n            this.menu.component.instance.choiceLoadError = undefined;\n            this.menu.component.instance.choiceLoading = true;\n            this.menu.component.changeDetectorRef.detectChanges();\n            Promise.resolve(this.findChoices(searchText))\n              .then(choices => {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory<\n        TextInputAutocompleteMenuComponent\n      >(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n    :host {\n      position: relative;\n      display: block;\n    }\n  `\n  ],\n  template: '<ng-content></ng-content>'\n})\nexport class TextInputAutocompleteContainerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n"],"names":[],"mappings":"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"}
